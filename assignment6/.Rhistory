str(shuttle)
shuttle$usebin <- as.numeric(shuttle$use == "auto")
str(shuttle)
fit <- glm(use ~ factor(wind)-1, family = binomial, data = shuttle))
fit <- glm(use ~ factor(wind)-1, family = binomial, data = shuttle)
summary(fit)
fit <- glm(use ~ factor(wind), family = binomial, data = shuttle)
fit <- glm(use ~ factor(wind)-1, family = binomial, data = shuttle)
fit2 <- glm(use ~ factor(wind), family = binomial, data = shuttle)
summary(fit2)
fit3 <- glm(factor(use) ~ factor(wind), family = binomial, data = shuttle)
summary(fit3)
coef <- coef(summary(fit))
coef
coef.odds <- exp(c(coef[1,1], coef[2,1]))
coef.odds
coef.odds[1]/coef.odds[2]
0.2513/0.2831
coef.odds[2]/coef.odds[1]
exp(coef(fit)[1])
exp(coef(fit)[2])
exp(-coef(fit)[2])
exp(-coef(fit)[1])
1.28/1.32
str(shuttle)
shuttle$usebin <- as.numeric(as.character(shuttle$use == "auto"))
str(shuttle)
shuttle$use <- as.character(shuttle$use)
str(shuttle$use)
shuttle$usebin <- as.numeric(shuttle$use == "auto")
str(shuttle)o
str(shuttle)
shuttle$usebin <- factor(shuttle$usebin)
fit4 <- glm(usebin ~ wind, data = shuttle, family = binomial)
c <- coef(fit4)
c
c <- c(c[1], c[1]+c[2])
c
c <- exp(c)
c[1]/c[2]
fit5 <- glm(use ~ factor(wind) + magn, data = shuttle, family = "binomial")
fit5 <- glm(use ~ factor(wind) + factor(magn), data = shuttle, family = "binomial")
fit5 <- glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit5 <- glm(usebin ~ wind + magn, data = shuttle, family = "binomial")
c <- coef(fit5))
c <- coef(fit5)
c
fit5 <- glm(usebin ~ wind + magn -1, data = shuttle, family = "binomial")
c <- coef(fit5)
c
c <- c(c[1], c[2])
c <- exp(c)
c[1]/c[2]
fit5 <- glm(usebin ~ wind + magn -1, data = shuttle, family = "binomial")
fit6 <- glm(I(1-usebin) ~ wind + magn -1, data = shuttle, family = "binomial")
shuttle$usebin <- as.numeric(shuttle$usebin)
fit5 <- glm(usebin ~ wind + magn -1, data = shuttle, family = "binomial")
fit5 <- glm(usebin ~ factor(wind) -1, data = shuttle, family = "binomial")
fit5 <- glm(I(1-usebin) ~ factor(wind) -1, data = shuttle, family = "binomial")
fit5 <- glm(I(1-usebin) ~ wind -1, data = shuttle, family = "binomial")
fit5 <- glm(factor(I(1-usebin)) ~ wind -1, data = shuttle, family = "binomial")
coef(fit5)
data(InsectSprays)
str(InsectSprays)
fit1 <- glm(count ~ spray -1, data = InsectSprays, family = "Poisson")
fit1 <- glm(count ~ spray -1, data = InsectSprays, family = "poisson")
summary(fit1)
c <- coef(fit1)
c
c <- c(c[1], c[2])
c <- exp(c)
c[1]/c[2]
fit1 <- glm(count ~ spray+offset(10), data = InsectSprays, family = "poisson")
fit1 <- glm(count ~ spray + offset(rep(2,length(InsectSprays$count))), data = InsectSprays, family = "poisson")
fit2 <- glm(count ~ spray + offset(log(10) + rep(2,length(InsectSprays$count))), data = InsectSprays, family = "poisson")
coef(fit1)
coef(fit2)
-log(10)
0.6741-log(10)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- c(0)
splineTerms <- sapply(knot, function(knot) (x>knot) * (x-knot))
xMat <- cbind(1,x,splineTerms)
yhat <- predict(lm(y~ xMat -1))
fit <- lm(y ~ xMat -1)
summary(fit)
plot(x,y)
x
yhat
y
xMat$x
fit1 <- glm(count ~ spray + offset(rep(2,length(InsectSprays$count)))-1, data = InsectSprays, family = "poisson")
fit2 <- glm(count ~ spray + offset(log(10) + rep(2,length(InsectSprays$count)))-1, data = InsectSprays, family = "poisson")
coef(fit1)
coef(fit2)
library(swirl)
swirl()
pt(2.5, lower.tail = FALSE)
pt(q = 2.5, df = 15, lower.tail = FALSE)
library(caret); library(lattice); library(ggplot2)
iris_modelRPART <- readRDS("iris-dataset.RDS"); iris_modelRPART$finalModel
iris_modelRPART <- readRDS("iris-dataset.RDS");
library(swirl)
swirl()
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,size=8,prob=.5,lower.tail = FALSE)
pbinom(7,size=8,prob=.5,lower.tail = TRUE)
ppois(9)
ppois(9,5)
ppois(9,5, lower.tail = FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30,lower.tail = FALSE)
pnorm(30+z, mean=32,lower.tail = FALSE)
pnorm(30+z, mean=32,sd=1,lower.tail = FALSE)
pnorm(30+z, mean=32,sd=2,lower.tail = FALSE)
pnorm(30+z*2, mean=32,sd=2,lower.tail = FALSE)
powrt.t.test(n=16,delta = 2/4,sd=1,type = "one.sample", alt = "one.sided")$power
power.t.test(n=16,delta = 2/4,sd=1,type = "one.sample", alt = "one.sided")$power
power.t.test(n=16,delta = 2,sd=4,type = "one.sample", alt = "one.sided")$power
power.t.test(n=16,delta = 100,sd=200,type = "one.sample", alt = "one.sided")$power
power.t.test(power=.8,delta = 2/4,sd=1,type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8,delta = 2,sd=4,type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8,delta = 100,sd=200,type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8,n=26,sd=1,type = "one.sample", alt = "one.sided")$delta
power.t.test(power=.8,n=27,sd=1,type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pValues <.05)
sum(p.adjust(pValues, method = "bonferroni")<.05)
sum(p.adjust(pValues, method = "BH")<.05)
tail(trueStatus)
table(pValues2<.05, trueStatus)
24/500
table(p.adjust(pValues2, method = "bonferroni")<.05, trueStatus)
table(p.adjust(pValues2, method = "BH")<.05, trueStatus)
(1/6)*1 + (1/6)*2 + (1/6)*3 + (1/6)*4 + (1/6)*5 + (1/6)*6
print(g2)
head(sh)
nh
median(resampleMedians)
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace = TRUE)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, median)
median(fh) - median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(.025,.975))
quantile(meds, c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCounts
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count - Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms>obs)
testStat(DEcounts,group)
persm <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
library(swirl)
swirl()
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, data = hunger)
summary(fit)$coef
lmF <- lm(Numeric[hunger$Sex == "Female"] ~ Year[hunger$Sex == "Female"], data = hunger)
lmM <- lm(Numeric[hunger$Sex == "Male"] ~ Year[hunger$Sex == "Male"], data = hunger)
lmBoth <- lm(Numeric ~ Year + Sex, data=hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Year*Sex, data=hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno, out2[1,])
1 - resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sum((fit$residuals)^2) /fit$df.residual)
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(sum((fitno$residuals)^2)/fitno$df.residual)
resid(fitno)/(sigma*sqrt(1-hatvalues))
resid(fitno)/(sigma*sqrt(1-hatvalues(fitno)))
resid(fit)[1]/(sigma*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
md1 <- lm(Fertility ~ ., data=swiss)
mdl <- lm(Fertility ~ ., data=swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ .-Examination, data=swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c,1,mean)
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data = swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, family = "binomial", data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore = c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,"date"])
as.integer(head(hits[,"date"]))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl, "date"))
which.max(hits[,"visits"])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95,lambda)
mdl2 <- glm(visits ~ date, poisson, data=hits, offset = log(visits+1))
mdl2 <- glm(simplystats ~ date, poisson, data=hits, offset = log(visits+1))
qpois(.95, mdl2$fitted.values[704])
a = matrix(5,5)
a
a = matrix(0,5,5)
a
a[1,4] = 55
a[1,5] = 78
a
a[2,1] = 19
a[2,3] = 21
a[2,4] = 3
a[2,5] = 81
a[3,2] = 48
a[3,3] = 50
a[3,4] = 1
a[4,2] = 33
a[4,5] = 67
a[5,1] = 95
a[5,5] = 31
a
b = matrix(0,5,5)
b
b[1,2] = 73
b[1,5] = 42
b[2,3]=82
b
[3,1] = 83
b[3,1] = 83
b[3,2] = 13
b[3,4] = 57
b[4,1] = 48
b[4,2] = 85
b[4,3] = 18
b[4,4] = 24
b[5,1] = 98
b[5,2] = 7
b[5,5] = 3
b
a%*%b
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kings
kings
kingstimeseries <- ts(kings)
kingstimeseries
births <- scan("http://robjhyndman.com/tsdldata/data/nybirth.dat")
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
birthstimeseries <- ts(births, frequency = 12, start = c(1946,1))
birthstimeseries
souvenir <- scan("http://robjhyndman.com/tsdldata/data/fancy.dat")
souvenirtimeseries <- ts(souvenir, frequency = 12, start = c(1987,1))
souvenirtimeseries
plot.ts(kingstimeseries)
plot.ts(birthstimeseries)
plot.ts(souvenirtimeseries)
logsouvenirtimeseries <- log(souvenirtimeseries)
plot.ts(logsouvenirtimeseries)
install.packages("TTR")
library(TTR)
kingstimeseriesSMA3 <- SMA(kingstimeseries, n=3)
plot.ts(kingstimeseriesSMA3)
kingstimeseriesSMA8 <- SMA(kingstimeseries, n=8)
plot.ts(kingstimeseriesSMA8)
birthstimeseriescomponents <- decompose(birthstimeseries)
birthstimeseriescomponents$seasonal
str(birthstimeseriescomponents)
plot(birthstimeseriescomponents)
birthstimeseriesseasonallyadjusted <- birthstimeseries - birthstimeseriescomponents$seasonal
plot(birthstimeseriesseasonallyadjusted)
souvenir <- scan("http://robjhyndman.com/tsdldata/husrt/precipl.dat", skip=1)
souvenir <- scan("http://robjhyndman.com/tsdldata/husrt/precip1.dat", skip=1)
rain <- scan("http://robjhyndman.com/tsdldata/husrt/precipl.dat", skip=1)
rain <- scan("http://robjhyndman.com/tsdldata/hurst/precipl.dat", skip=1)
rain <- scan("http://robjhyndman.com/tsdldata/hurst/precip1.dat", skip=1)
rainseries <- ts(rain, start = c(1813))
plot.ts(rainseries)
rainseriesforecasts <- HoltWinters(rainseries, beta = FALSE, gamma = FALSE)
rainseriesforecasts
rainseriesforecasts$fitted
plot(rainseriesforecasts)
rainseriesforecasts$SSE
HoltWinters(rainseries, beta = FALSE, gamma = FALSE, l.start = 23.56)
library(forecast)
rainseriesforecasts2 <- forecast.HoltWinters(rainseriesforecasts, h = 8)
rainseriesforecasts2
plot.forecast(rainseriesforecasts2)
acf(rainseriesforecasts2$residuals, lag.max = 20)
Box.test(rainseriesforecasts2$residuals, lag=20, type = "Ljung-Box")
plot.ts(rainseriesforecasts2$residuals)
plotForecastErrors <- function(forecasterror) {
mybinsize <- IQR(forecasterror)/4
mysd <- sd(forecasterror)
mymin <- min(forecasterror) - mysd*5
mymax <- max(forecasterror) + mysd*3
mynorm <- rnorm(10000,mean=0, sd=mysd)
mymin2 <- min(mynorm)
mymax2 <- max(mynorm)
if (mymin2 < mymin) {mymin <- mymin2}
if (mymax2 > mymax) {mymax <- mymax2}
mybins <- seq(mymin, mymax, mybinsize)
hist(forecasterror, col = "red", freq = FALSE, breaks = mybins)
myhist <- hist(mynorm, plot= FALSE, breaks = mybins)
points(myhist$mids, myhist$density, type = "l", col = "blue", lwd = 2)
}
plotForecastErrors(rainseriesforecasts2$residuals)
skirts <- scan("http://robjhyndman.com/tsdldata/roberts/skirts.dat", skip=5)
skirtsseries <- ts(skirts, start = c(1866))
plot.ts(skirtsseries)
skirtsseriesforecasts <- HoltWinters((skirtsseries, gamma = FALSE))
skirtsseriesforecasts <- HoltWinters(skirtsseries, gamma = FALSE)
skirtsseriesforecasts
plot(skirtsseriesforecasts)
HoltWinters(skirtsseries, gamma = FALSE, l.strat = 608, b.strat = 9)
HoltWinters(skirtsseries, gamma = FALSE, l.strat = 608, b.start = 9)
HoltWinters(skirtsseries, gamma = FALSE, l.start = 608, b.start = 9)
skirtsseriesforecasts2 <- forecast.HoltWinters(skirtsseriesforecasts, h = 19)
plot.forecast(skirtsseriesforecasts2)
acf(skirtsseriesforecasts2$residuals, lag.max = 20)
Box.test(skirtsseriesforecasts2$residuals, lag=20,type = "Ljung-Box")
plot.ts(skirtsseriesforecasts2$residuals)
plotForecastErrors(skirtsseriesforecasts2$residuals)
x = c(89,72,94,69)
m = mean(x)
range(x)
s = max(x) - min(x)
s
(89-m)/s
y = c(7921, 5184, 8836, 4761)
my = mean(y)
sy = max(y) - min(y)
sy
(4761-my)/sy
a = 2*(1,01)^3 + 2
a <- 2*(1,01)^3 + 2
a <- 2* (1,01)^3 + 2
1,01^3
a <- 2* (1.01)^3 + 2
b <- 2* (0,99)^3 + 2
b <- 2* (0.99)^3 + 2
c <- 2*0.01
a-b/c
(a-b)/c
u1 = c(1,2)
u2 = c(-3,0)
u4 = c(4,2)
u1
u2
u3
u3 = u4
u3
x = c(-2,1)
setwd("~/Documents/Coursera/University of Washington - Data Science at Scale/datasci_course_materials/assignment6")
sea = read.csv('seattle_incidents_summer_2014.csv');
san = read.csv('sanfrancisco_incidents_summer_2014.csv');
str(sea)
dim(sea)
str(sea)
dim(san)
str(san)
str(sea)
names(sea)
length(unique(sea$RMS.CDW.ID))
length(unique(sea$General.Offense.Number))
length(unique(sea$Offense.Code))
summary(sea)
View(sea)
str(sea)
length(unique(sea$General.Offense.Number))
length(unique(sea$Offense.Code.Extension))
max(sea$Date.Reported)
length(unique(sea$Census.Tract.2000))
length(unique(sea$Month))
length(unique(sea$Year))
head(sea$Location)
str(sea)
v <- sea$Occurred.Date.or.Date.Range.Start
length(v)
head(v)
v <- as.date(v)
library(timeDate)
v <- as.date(v)
?date
head(date(v))
a <- v[1]
a
date(a)
day(a)
sys.time(a)
Sys.time(a)
a
a-1
a-a
as.date(a)
as.Date.POSIXlt(a)
as.Date.date(a)
as.integer(a)
a
as.timeDate(a)
sea = read.csv('seattle_incidents_summer_2014.csv', stringsAsFactors = FALSE);
dim(sea) # 32779 x 19
str(sea)
names(sea)
length(unique(sea$RMS.CDW.ID))
summary(sea)
sea = read.csv('seattle_incidents_summer_2014.csv');
dim(sea) # 32779 x 19
str(sea)
library(lubridate)
v <- sea$Occurred.Date.Range.End
head(v)
a <- v[1]
a
a <- ymd_hms(a)
a
a <- v[1]
a
a <- as.character(a)
a
a <- ymd_hms(a)
a
a <- v[1]
a <- as.character(a)
a
as.POSIXct(a, format = "%m/%d/%Y %H:%M:%S")
a <- as.POSIXct(a, format = "%m/%d/%Y %H:%M:%S")
a
day(a)
month(a)
year(a)
sea$Occurred.Date.Range.End <- as.character(sea$Occurred.Date.Range.End)
sea$Occurred.Date.or.Date.Range.Start <- as.character(sea$Occurred.Date.or.Date.Range.Start)
sea$Occurred.Date.Range.End <- as.POSIXct(sea$Occurred.Date.Range.End, format ="%m/%d/%Y %H:%M:%S")
sea$Occurred.Date.or.Date.Range.Start <- as.POSIXct(sea$Occurred.Date.or.Date.Range.Start, format ="%m/%d/%Y %H:%M:%S")
str(sea)
sea$Date.Reported <- as.character(sea$Date.Reported)
sea$Date.Reported <- as.POSIXct(sea$Date.Reported, format ="%m/%d/%Y %H:%M:%S")
str(sea)
require(gridExtra)
library(ggplot2)
require(gridExtra)
library(ggplot2)
g <- ggplot(data = sea, aes(Offense.Type ~ Date.Reported)) + geom_bar(position = "dodge")
g <- g + ggtitle("Incidents over time")
h <- ggplot(data = sea, aes(Summarized.Offense.Description ~ Date.Reported)) + geom_bar(position = "dodge")
h <- h + ggtitle("Incidents over time")
h <- h + theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(g,h,ncol=2)
g <- ggplot(data = sea, aes(Offense.Type, Date.Reported)) + geom_bar(position = "dodge")
g <- g + ggtitle("Incidents over time")
h <- ggplot(data = sea, aes(Summarized.Offense.Description, Date.Reported)) + geom_bar(position = "dodge")
h <- h + ggtitle("Incidents over time")
h <- h + theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(g,h,ncol=2)
g <- ggplot(data = sea, aes(Date.Reported,Offense.Type)) + geom_bar(position = "dodge")
g <- g + ggtitle("Incidents over time")
h <- ggplot(data = sea, aes(Date.Reported,Summarized.Offense.Description)) + geom_bar(position = "dodge")
h <- h + ggtitle("Incidents over time")
h <- h + theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(g,h,ncol=2)
